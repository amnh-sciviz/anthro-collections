# -*- coding: utf-8 -*-

import argparse
import collections
import math
import os
from pprint import pprint
import sys

import lib.io_utils as io
import lib.list_utils as lu
import lib.math_utils as mu

# input
parser = argparse.ArgumentParser()
parser.add_argument('-in', dest="INPUT_FILE", default="data/MexicoAndCentralAmerica.csv", help="File generated by html_to_csv.py")
parser.add_argument('-out', dest="OUTPUT_DIR", default="images/MexicoAndCentralAmerica/", help="Output dir")
parser.add_argument('-overwrite', dest="OVERWRITE", action="store_true", help="Overwrite existing data?")
a = parser.parse_args()

# Make sure output dirs exist
io.makeDirectories([a.OUTPUT_DIR])

fieldNames, items = io.readCsv(a.INPUT_FILE)
itemCount = len(items)

for i, item in enumerate(items):
    imgUrl = item['Thumb URL']
    if len(imgUrl) > 0:
        io.downloadBinaryFile(imgUrl, a.OUTPUT_DIR, overwrite=a.OVERWRITE)
    print("%s%%" % round((i+1) / len(items) * 100.0, 2))
